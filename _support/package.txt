{{with .PAst}}{{node $ .}}{{end}}{{/*

---------------------------------------

*/}}{{with .PDoc}}{{if not $.IsMain}}
# GoTest

[![GoDoc](https://godoc.org/gopkg.in/jmervine/GoT.v1?status.png)](https://godoc.org/gopkg.in/jmervine/GoT.v1) [![Build Status](https://travis-ci.org/jmervine/GoT.svg?branch=master)](https://travis-ci.org/jmervine/GoT)

<center>![GoT](http://cdn.mervine.net/GoT.jpg)</center>

#### Simple Assertion wrapper for Go's built in "testing" package.

GoT is designed to be as simple and unintrusive as possible while adding basic Assert and Refute methods to assist in writing clean and clean tests quickly.

##### See [examples](_example) for detailed assertion usage.

## [Documentation](https://godoc.org/gopkg.in/jmervine/GoT.v1)

```go
import "gopkg.in/jmervine/GoT.v1"
```
{{else}}
{{end}}{{comment_text .Doc "" "    "}}
{{if example_text $ "" ""}}```go
{{example_text $ "" "    // "}}
```
{{end}}{{/*

---------------------------------------

*/}}{{with .Consts}}
### Constants

{{range .}}```go
{{node $ .Decl}}
```

{{comment_text .Doc "> " ""}}
{{end}}{{end}}{{/*

---------------------------------------

*/}}{{with .Vars}}
### Variables

{{range .}}```go
{{node $ .Decl}}
```

{{comment_text .Doc "> " ""}}
{{end}}{{end}}{{/*

---------------------------------------

*/}}{{with .Types}}
### Types

{{range .}}#### {{.Name}}
```go
{{$tname := .Name}}{{node $ .Decl}}
```
{{range .Consts}}```go
{{node $ .Decl}}
```
{{comment_text .Doc "> " ""}}
{{end}}
{{range .Vars}}{{node $ .Decl}}
{{comment_text .Doc "> " ""}}{{if example_text $ .Name ""}}```go
{{example_text $ .Name "    // "}}
```{{end}}
{{end}}
{{range .Funcs}}#### {{.Name}}
```go
{{node $ .Decl}}
```
{{comment_text .Doc "> " ""}}
{{if example_text $ .Name ""}}```go
{{example_text $ .Name "    // "}}
```{{end}}
{{end}}{{range .Methods}}{{/* methods */}}#### {{.Name}}
```go
{{node $ .Decl}}
```
{{comment_text .Doc "> " ""}}
{{$name := printf "%s_%s" $tname .Name}}
{{if example_text $ $name ""}}```go
{{example_text $ $name "    // "}}
```
{{end}}
{{end}}{{end}}{{end}}{{/*

---------------------------------------

*/}}{{with .Funcs}}
{{range .}}#### {{.Name}}
```go
{{node $ .Decl}}
```
{{comment_text .Doc "> " ""}}{{if example_text $ .Name ""}}```go
{{example_text $ .Name "    // "}}
```{{end}}
{{end}}{{end}}{{/*

---------------------------------------

*/}}{{with $.Notes}}
{{range $marker, $content := .}}
{{noteTitle $marker}}s

{{range $content}}{{comment_text . "> " ""}}
{{end}}{{end}}{{end}}{{end}}{{/*

---------------------------------------

{{with .Dirs}}
## Subdirectories
{{if $.DirFlat}}{{range .List}}{{if .HasPkg}}
	{{.Path}}{{end}}{{end}}
{{else}}{{range .List}}
	{{repeat `. ` .Depth}}{{.Name}}{{end}}
{{end}}{{end}}
*/}}
